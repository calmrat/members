#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author: "Chris Ward" <cward@redhat.com>

# PY3 COMPAT
from __future__ import unicode_literals, absolute_import

"""
Git pre-commit hooks for stats-report.
"""

import argparse
import logging
import sys

from members.utils import logr, run

# Turn on DEBUG so we can get a full log on each commit
logr.setLevel(logging.DEBUG)


def run_tests():
    '''
    Run all the available tests.
    '''
    # Try to run make build
    cmd = "py.test tests"
    return run(cmd)


def make_sdist():
    '''
    Make sure we haven't broken the rpm source builds
    '''
    # Try to build a python pip installable package
    cmd = 'python setup.py sdist'
    return run(cmd)


def main():
    """ Main function handling configuration files etc """
    parser = argparse.ArgumentParser(
        description='Git python commit hooks')
    parser.add_argument(
        '--make-rpm', action='store_const', const=True, default=True,
        help='Build RPMs from source')
    parser.add_argument(
        '--run-tests', action='store_const', const=True, default=True,
        help='Run all available tests')
    parser.add_argument(
        '--stash-first', action='store_const', const=True, default=False,
        help='Run all available tests')
    args = parser.parse_args()

    # make sure we're working with only the staged content!
    if args.stash_first:
        run('git stash -q --keep-index')

    try:
        results = []
        if args.run_tests:
            logr.debug('TESTS RUN: START')
            results.append({'run_tests': run_tests()})
            logr.warn('TESTS RUN: PASS')
    finally:
        # make sure we return things back to how they started
        if args.stash_first:
            run('git stash pop -q')

    if all(results):
        sys.exit(0)
    else:
        sys.exit(1)


if __name__ == '__main__':
    main()
    sys.exit(0)

sys.exit(1)
